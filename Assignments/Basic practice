"R" Markdown document for the first assignment. 

Test question:
Using seq() to create the vector (1,2,3,…,10).
    seq(1,10)
##  [1]  1  2  3  4  5  6  7  8  9 10

Question 1
a) Use the seq() function to create the vector (1,7,13,…,61). Note that each term in this sequence is of the form 1+6n where n=0,…,10.
    seq(1, 61, by = 6)
##  [1]  1  7 13 19 25 31 37 43 49 55 61

b) Use seq() and c() to create the vector (1,2,3,…,10,9,8,…,3,2,1).
    c(x <- (seq(1:10)), rev(x[-length(x)]))
##  [1]  1  2  3  4  5  6  7  8  9 10  9  8  7  6  5  4  3  2  1

c) Use rep() to create the vector (2,3,4,…,2,3,4) in which the sequence (2,3,4) is repeated 5 times.
    rep(c(2, 3, 4), times = 5)
##  [1] 2 3 4 2 3 4 2 3 4 2 3 4 2 3 4

d) Use rep() to create the vector (1,1,…,1,2,2,…,2,3,3,…,3) where each number is repeated 10 times.
    rep(c(1, 2, 3), each = 10)
##  [1] 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3

Question 2
a) Compute: (100)∑(n=10): {n^3} 
    sum((10:100)^3)
## [1] 25500475
	
b) Compute: (10)∑(n=1): {2^n/n^2 + n^4/4^n} 
    n <- seq(1:10)
    sum((2^n/n^2) + (n^4/4^n))
## [1] 35.80589
	
c) Compute: (10)∑(n=0): {1/(n+1)!}
    n <- 0:10
    sum(1/factorial(n + 1))
## [1] 1.718282
	
d) Compute: (33)∏(n=3): {3n + 3/∛n} 
    n <- 3:33
    prod((3*n) + (3/(n^(1/3))))
## [1] 9.054339e+51

Question 3
a) Create an empty list mylist.
    mylist <- list()
    
b) Add a component named firstVar whose value is the numeric vector (1,2,…,10).
    firstVar <- 1:10
    my_list <- list(firstVar)
    my_list
## [[1]]
##  [1]  1  2  3  4  5  6  7  8  9 10
	
c) Add a component named secondVar which is a 4x5 matrix whose elements are (1,2,…,20) in row-wise order.
    secondVar <- matrix(1:20, nrow = 4, ncol = 5, byrow = TRUE)
    my_list <- list(firstVar, secondVar)
    my_list
## [[1]]
##  [1]  1  2  3  4  5  6  7  8  9 10
## 
## [[2]]
##      [,1] [,2] [,3] [,4] [,5]
## [1,]    1    2    3    4    5
## [2,]    6    7    8    9   10
## [3,]   11   12   13   14   15
## [4,]   16   17   18   19   20
	
d) Add a component named thirdVar which is the output of multipling each element of secondVar by the average of firstVar.
    thirdVar <- (secondVar) * mean(firstVar)
    my_list <- list(firstVar, secondVar, thirdVar)
    my_list
## [[1]]
##  [1]  1  2  3  4  5  6  7  8  9 10
## 
## [[2]]
##      [,1] [,2] [,3] [,4] [,5]
## [1,]    1    2    3    4    5
## [2,]    6    7    8    9   10
## [3,]   11   12   13   14   15
## [4,]   16   17   18   19   20
## 
## [[3]]
##      [,1] [,2] [,3]  [,4]  [,5]
## [1,]  5.5 11.0 16.5  22.0  27.5
## [2,] 33.0 38.5 44.0  49.5  55.0
## [3,] 60.5 66.0 71.5  77.0  82.5
## [4,] 88.0 93.5 99.0 104.5 110.0
	
e) Display mylist on the screen, after rounding the elements of ‘thirdVar’ to the nearest integer.
    thirdVar <- as.integer(thirdVar)
    my_list <- list(firstVar, secondVar, thirdVar)
    my_list
## [[1]]
##  [1]  1  2  3  4  5  6  7  8  9 10
## 
## [[2]]
##      [,1] [,2] [,3] [,4] [,5]
## [1,]    1    2    3    4    5
## [2,]    6    7    8    9   10
## [3,]   11   12   13   14   15
## [4,]   16   17   18   19   20
## 
## [[3]]
##  [1]   5  33  60  88  11  38  66  93  16  44  71  99  22  49  77 104  27
## [18]  55  82 110

Question 4
iris data set gives the measurements in centimeters of the variables sepal length, sepal width, petal length and petal width, respectively, for 50 flowers from each of 3 species of iris. The species are Iris setosa, versicolor, and virginica.
Install the iris data set on your computer using the command install.packages("datasets"). Then load the datasets package into your session using the following command.
library(datasets)
	
a) Display the first 6 rows of the iris data set
    head(iris)
##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
	
b) Compute the average of the first four variables (Sepal.Length, Sepal.Width, Petal.Length and Petal.Width) using sapply() function.
    sapply(iris[ , 1:4], mean, na.rm = TRUE)
## Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
##     5.843333     3.057333     3.758000     1.199333

c) Show how to use R to replace the missing values in this dataset with plausible ones.
    iris2 <- iris
    for (i in 1:4){
    iris2[is.na(iris2[,i]), i] <- mean(iris2[,i], na.rm = TRUE)

d) Compute the standard deviation for only the first and the third variables (Sepal.Length and Petal.Length)
    sapply(iris[, seq(1,3, by =2)], sd)
## Sepal.Length Petal.Length 
##    0.8280661    1.7652982
	
e) Construct a boxplot for Sepal.Width variable, then display all the outliers.
    boxplot((iris$Sepal.Width), ylab = "Spal Width", main = "Sepal Width") 
    boxplot.stats(iris$Sepal.Width)$out
## [1] 4.4 4.1 4.2 2.0
	
f) Compute the lower and the upper quartiles of Sepal.Width variable
    quantile(iris$Sepal.Width, probs = c(0.25, 0.75))
## 25% 75% 
## 2.8 3.3
	
g) Construct a pie chart to describe the species with ‘Sepal.Length’ greater than 5 centimeters.
    table1 <- table(iris$Species, iris$Sepal.Length > 5)
    table1
    pie(table1[ , 2], main = "Sepal Length >5")
##             
##              FALSE TRUE
##   setosa        28   22
##   versicolor     3   47
##   virginica      1   49

 
END of Assignment #1.
